language: android
jdk:
  - oraclejdk7

# Turn off caching to avoid any caching problems
cache: false

# Use the Travis Container-Based Infrastructure
sudo: false

env:
  global:
    - ANDROID_API_LEVEL=22
    - ANDROID_BUILD_TOOLS_VERSION=22.0.1
    - ANDROID_ABI=armeabi-v7a

    # Timeout for the emulator to start. In minutes. The default is 2, which is often not enough
    - ADB_INSTALL_TIMEOUT=1

android:
  components:
    # Use the latest revision of Android SDK Tools
    - platform-tools
    - tools

    # SDK version and build tools
    - android-$ANDROID_API_LEVEL
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION

    # Google Play Services
    - extra-google-google_play_services

    # Support library
    - extra-android-support

    # Additional components
    - extra-google-m2repository
    - extra-android-m2repository

    # System image for the emulator. See http://docs.travis-ci.com/user/languages/android/
    - sys-img-armeabi-v7a-android-$ANDROID_API_LEVEL

before_install:
  # Set the JDK environment variables for both java-7 and java-8
  - export JAVA7_HOME=/usr/lib/jvm/java-7-oracle
  - export JAVA8_HOME=/usr/lib/jvm/java-8-oracle
  - export JAVA_HOME=$JAVA7_HOME

before_script:
  # Build. In two steps because of an issue with retrolambda (see https://github.com/evant/gradle-retrolambda/issues/105)
  - ./gradlew prepareDebugDependencies
  - ./gradlew assembleDebug

  # Create an Android Virtual Device
  - echo no | android create avd --force -n simple-emulator -t android-$ANDROID_API_LEVEL --abi $ANDROID_ABI

  # Start the emulator (with no GUI: note the "-no-window")
  - emulator -avd simple-emulator -no-skin -no-audio -no-window &

  # Wait for the emulator for $ADB_INSTALL_TIMEOUT minutes. More commonly done with "adb wait-for-device"
  - ./ci/wait_for_emulator

script:
  # Connect to the emulator and run the tests with the Android runner
  - ./gradlew connectedCheck

  # Run the plain JUnit tests too
  #- ./gradlew test --continue # I don't get it: java.lang.UnsupportedClassVersionError

after_success:
  # Only from master: distribute the debug version to Fabric Beta
  - if [ "$TRAVIS_BRANCH" == "master" ]; then ./gradlew assembleDebug crashlyticsUploadDistributionDebug; fi
  - echo "Published the APK to Crashlytics"

after_failure:
  - echo "After failure"
  - pwd
  - cat app/build/reports/androidTests/connected/index.html
