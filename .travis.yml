language: android
jdk:
  - oraclejdk8

# Turn off caching to avoid any caching problems
cache: false

# Use the Travis Container-Based Infrastructure
sudo: false

env:
  global:
    - ANDROID_API_LEVEL=22
    - ANDROID_BUILD_TOOLS_VERSION=22.0.1
    - ANDROID_ABI=armeabi-v7a

    # Timeout for the emulator to start. In minutes. The default is 2, which is often not enough
    - ADB_INSTALL_TIMEOUT=8

android:
  components:
    # Use the latest revision of Android SDK Tools
    - platform-tools
    - tools

    # SDK version and build tools
    - android-$ANDROID_API_LEVEL
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION

    # Google Play Services
    - extra-google-google_play_services

    # Support library
    - extra-android-support

    # Additional components
    - extra-google-m2repository
    - extra-android-m2repository

    #- addon-google_apis-google-$ANDROID_API_LEVEL

    # System image for the emulator. x86 are not supported by Travis, unfortunately
    - sys-img-armeabi-v7a-android-$ANDROID_API_LEVEL

before_script:
  # Set the JDK environment variables
  - export JAVA7_HOME=/usr/lib/jvm/java-7-oracle
  - export JAVA8_HOME=/usr/lib/jvm/java-8-oracle
  - export JAVA_HOME=$JAVA8_HOME

script:
  # Clean and full rebuild
  - ./gradlew clean build

  ## TESTS ARE DISABLED
  ##
  ## Tests on an emulator fail all the time for unknown reasons. The build is extremely
  ## flaky even in a hello-world application (tested by Pablo in Sept 2015). Here's a more
  ## authoritative source: https://github.com/travis-ci/travis-ci/issues/3423
  ##
  # Create and start emulator. DISABLED: see below
  - echo no | android create avd --force -n open-maps -t android-$ANDROID_API_LEVEL --abi $ANDROID_ABI
  - emulator -avd open-maps -no-skin -no-audio -no-window &
  #- echo no | android create avd --force -n test -t "Google Inc.:Google APIs:"$ANDROID_API_LEVEL --abi $ANDROID_ABI
  #- emulator -avd test -no-skin -no-audio -no-window &
  #
  # Wait for the emulator for $ADB_INSTALL_TIMEOUT minutes. Usually done with "adb wait-for-device"
  - ./ci/wait_for_emulator
  #
  # To make sure we unlock the screen
  #- adb shell input keyevent 82 &
  #
  # Connect and run the tests.
  - ./gradlew connectedCheck -PdisablePreDex

  # Run plain JVM tests
  #- ./gradlew test --continue

after_script:
  # Only from master: distribute the debug version to Fabric Beta. Make sure you update ext.betaDistributionReleaseNotes in the Gradle file
  #- if [ "$TRAVIS_BRANCH" == "master" ]; then ./gradlew assembleDebug crashlyticsUploadDistributionDebug; fi
  - echo "push to crashlytics"

after_success:
  - echo "pablo - success!"

after_failure:
  - echo "pablo - failed!"
