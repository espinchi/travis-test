language: android
jdk:
  - oraclejdk7
  - oraclejdk8

# Turn off caching to avoid any caching problems
cache: false

# Use the Travis Container-Based Infrastructure
sudo: false

env:
  global:
    # So far, I have failed to run in API level 22. Didn't dare to even try 23
    - ANDROID_API_LEVEL=21
    - ANDROID_BUILD_TOOLS_VERSION=21.1.2
    - ANDROID_ABI=google_apis/armeabi-v7a

    # Timeout for the emulator to start. In minutes. The default is 2, which is often not enough
    - ADB_INSTALL_TIMEOUT=8

android:
  components:
    # Use the latest revision of Android SDK Tools
    - platform-tools
    - tools

    # SDK version and build tools
    - android-$ANDROID_API_LEVEL
    - build-tools-$ANDROID_BUILD_TOOLS_VERSION

    # Additional components
    - extra-android-support
    - extra-google-google_play_services
    - extra-google-m2repository
    - extra-android-m2repository
    - addon-google_apis-google-$ANDROID_API_LEVEL

    # System image (at least one is needed) for the emulator. Others: sys-img-armeabi-v7a-android-21, sys-img-x86-android-17
    - sys-img-armeabi-v7a-addon-google_apis-google-$ANDROID_API_LEVEL

before_script:
  # Set the JDK environment variables
  - export JAVA7_HOME=/usr/lib/jvm/java-7-oracle
  - export JAVA8_HOME=/usr/lib/jvm/java-8-oracle
  - export JAVA_HOME=$JAVA8_HOME

  # Clean everything, to be sure
  - ./gradlew clean build

  # Create and start emulator
  - echo no | android create avd --force -n test -t "Google Inc.:Google APIs:"$ANDROID_API_LEVEL --abi $ANDROID_ABI
  - emulator -avd test -no-skin -no-audio -no-window &

script:

  ## TESTS ARE DISABLED
  ##
  ## Tests on an emulator fail all the time for unknown reasons. The build is extremely
  ## flaky even in a hello-world application (tested by Pablo in Sept 2015). Here's a more
  ## authoritative source: https://github.com/travis-ci/travis-ci/issues/3423
  ##
  # Wait for the emulator for $ADB_INSTALL_TIMEOUT minutes. Usually done with "adb wait-for-device"
  #- ./ci/wait_for_emulator
  #
  # To make sure we unlock the screen
  #- adb shell input keyevent 82 &
  #
  # Connect and run the tests.
  #- ./gradlew connectedCheck -PdisablePreDex
  #- ./gradlew --info connectedAndroidTest

  # Run plain JVM tests
  - ./gradlew test --continue

after_script:
  # Distribute the debug version (!) to Fabric Beta. Make sure you update ext.betaDistributionReleaseNotes in the Gradle file
  - ./gradlew assembleDebug crashlyticsUploadDistributionDebug
